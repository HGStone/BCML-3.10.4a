# .github/workflows/build.yml

name: Build Standalone BCML Executables

on:
  workflow_dispatch:

env:
  BCML_VERSION: 3.10.9

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python 3.8 (latest available)
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: x64

      - name: Install Rust (for zstandard, etc.)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Debug collected runtime files
        run: |
          echo "=== Gathering runtime data files from aamp and rstb ==="
          python collect_runtime_files.py || true

      - name: Build Executable (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          set -e
          echo "CWD before build: $(pwd)"
          FILES=$(python collect_runtime_files.py | tr -d '\r')
          echo "Runtime data files to include:"
          echo "$FILES"
          ADD_ARGS=()
          while IFS= read -r f; do
            ADD_ARGS+=(--add-data "$f:aamp")
          done <<< "$FILES"
          echo "Running PyInstaller with args: ${ADD_ARGS[*]}"
          pyinstaller --onefile --name bcml --icon bcml/data/bcml.ico -c bcml/__main__.py "${ADD_ARGS[@]}"
          echo "Dist contents:"
          ls -l dist || true
          if [[ -f dist/bcml ]]; then
            mv dist/bcml dist/bcml-linux-${{ env.BCML_VERSION }}
          else
            echo "ERROR: dist/bcml missing after build" >&2
            exit 1
          fi

      - name: Build Executable (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          set -e
          echo "CWD before build: $(pwd)"
          FILES=$(python collect_runtime_files.py | tr -d '\r')
          echo "Runtime data files to include:"
          echo "$FILES"
          ADD_ARGS=()
          while IFS= read -r f; do
            ADD_ARGS+=(--add-data "$f;aamp")
          done <<< "$FILES"
          echo "Running PyInstaller with args: ${ADD_ARGS[*]}"
          pyinstaller --onefile --name bcml --icon bcml/data/bcml.ico -c bcml/__main__.py "${ADD_ARGS[@]}"
          echo "Dist contents:"
          ls -l dist || true
          if [[ -f dist/bcml.exe ]]; then
            mv dist/bcml.exe dist/bcml-windows-${{ env.BCML_VERSION }}.exe
          else
            echo "ERROR: dist/bcml.exe missing after build" >&2
            exit 1
          fi

      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: bcml-windows-${{ env.BCML_VERSION }}
          path: dist/bcml-windows-${{ env.BCML_VERSION }}.exe

      - name: Upload artifact (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: bcml-linux-${{ env.BCML_VERSION }}
          path: dist/bcml-linux-${{ env.BCML_VERSION }}
